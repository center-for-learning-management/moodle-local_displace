{"version":3,"file":"competency.min.js","sources":["../src/competency.js"],"sourcesContent":["define(\n    ['jquery', 'core/ajax', 'core/notification', 'core/modal_factory', 'core/pending','core/str'],\n    function($, Ajax, Notification, ModalFactory, Pending, Str) {\n    return {\n        debug: false,\n        queue: [],\n        queueActiveItem: false,\n        /**\n         * Add a single competency to a course.\n         * @param {DOMElement} a sender of the event.\n         */\n        competencyAddSingle: function(a) {\n            let C = this;\n            if (C.debug) {\n                console.log('Add single', a);\n            }\n\n            let courseid = $(a).closest('table').attr('data-courseid');\n            let id = $(a).closest('tr').attr('data-id');\n            let method = 'core_competency_add_competency_to_course';\n            let data = { 'courseid': courseid, 'competencyid': id };\n            C.queue.push({'methodname': method, 'args': data, 'tr': $(a).closest('tr') });\n            $(a).closest('tr').addClass('queue-pending');\n            C.competencyQueue();\n        },\n        /**\n         * Add/Remove multiple competencies\n         * to/from a course.\n         * @param {DOMElement} a sender of the event.\n         */\n        competencyAddMultiple: function(a) {\n            let C = this;\n            // Get the first child to decide if we\n            // add or remove.\n            let tr = $(a).closest('tr');\n            let id = tr.attr('data-id');\n            let children = tr.closest('table').find('tr.childof-' + id);\n            if (children.length > 0) {\n                if (C.debug) {\n                    console.log('children', children);\n                }\n                let isused = children.first().hasClass('used');\n                if (!isused) {\n                    children.each(function() {\n                        if (!$(this).hasClass('used')) {\n                            C.competencyAddSingle($(this).find('.addsingle'));\n                        }\n                    });\n                } else {\n                    let shortname = $(a).closest('tr').find('.shortname').html();\n                    Str.get_strings([\n                            {'key' : 'competency:remove:title', component: 'local_displace' },\n                            {'key' : 'competency:remove:multiple', component: 'local_displace', param: { 'shortname': shortname } },\n                            {'key' : 'yes' },\n                            {'key': 'no'}\n                        ]).done(function(s) {\n                            Notification.confirm(\n                                s[0], s[1], s[2], s[3],\n                                function() {\n                                    children.each(function() {\n                                        if ($(this).hasClass('used')) {\n                                            C.competencyRemoveSingle($(this).find('.removesingle'), true);\n                                        }\n                                    });\n                                }\n                            );\n                        }\n                    ).fail(Notification.exception);\n                }\n\n            }\n        },\n        /**\n         * Remove a single competency to a course.\n         * @param {DOMElement} a sender of the event.\n         * @param {bool} confirmed if the user confirmed the action.\n         */\n        competencyRemoveSingle: function(a, confirmed) {\n            let C = this;\n            if (typeof confirmed === 'undefined') {\n                var shortname = $(a).closest('tr').find('.shortname').html();\n                Str.get_strings([\n                        {'key' : 'competency:remove:title', component: 'local_displace' },\n                        {'key' : 'competency:remove:single', component: 'local_displace', param: { 'shortname': shortname } },\n                        {'key' : 'yes' },\n                        {'key': 'no'}\n                    ]).done(function(s) {\n                        Notification.confirm(\n                            s[0], s[1], s[2], s[3],\n                            function() {\n                                C.competencyRemoveSingle(a, true);\n                            }\n                        );\n                    }\n                ).fail(Notification.exception);\n            } else {\n                if (C.debug) {\n                    console.log('Remove single', a);\n                }\n                let courseid = $(a).closest('table').attr('data-courseid');\n                let id = $(a).closest('tr').attr('data-id');\n                let method = 'core_competency_remove_competency_from_course';\n                let data = { 'courseid': courseid, 'competencyid': id };\n                C.queue.push({'methodname': method, 'args': data, 'tr': $(a).closest('tr') });\n                $(a).closest('tr').addClass('queue-pending');\n                C.competencyQueue();\n            }\n        },\n        /**\n         * Handles the next item in queue.\n         */\n        competencyQueue: function() {\n            let C = this;\n            if (C.queueActiveItem) {\n                return;\n            }\n            if (C.queue.length == 0) {\n                return;\n            }\n            let item = C.queue.shift();\n            if (C.debug) {\n                console.log('Queue Item', item);\n            }\n            C.queueActiveItem = true;\n            Ajax.call([{\n                methodname: item.methodname,\n                args: item.args,\n                done: function(result) {\n                    $(item.tr).removeClass('queue-pending');\n                    if (C.debug) {\n                        console.log('Results of ' + item.methodname, result);\n                    }\n                    if (result) {\n                        if (item.methodname == 'core_competency_add_competency_to_course') {\n                            $(item.tr).addClass('used');\n                        } else {\n                            $(item.tr).removeClass('used');\n                        }\n                        $(item.tr).addClass('displace-alert success');\n                        setTimeout(\n                            function() {\n                                $(item.tr).removeClass('displace-alert success');\n                            }, 1000\n                        );\n                    } else {\n                        $(item.tr).addClass('displace-alert danger');\n                    }\n                    C.queueActiveItem = false;\n                    C.competencyQueue();\n                },\n                fail: function(ex) {\n                    $(item.tr).addClass('displace-alert danger');\n                    C.queueActiveItem = false;\n                    Notification.exception(ex);\n                }\n            }]);\n        },\n        /**\n         * Show the description\n         * @param {OOMElement} a\n         */\n        modalDescription: function(a) {\n            let description = $(a).find('.description').html();\n            let shortname = $(a).find('.shortname').html();\n            ModalFactory.create({\n                title: shortname,\n                body: description,\n            }).done(function(modal) {\n                modal.show();\n            });\n        },\n        /**\n         * Sets the rule outcome option.\n         * @param {DOMElement} select\n         */\n        setRuleOutcomeOption: function(select) {\n            let pendingPromise = new Pending();\n            let requests = [];\n\n            let coursecompetencyid = $(select).closest('tr').attr('data-id');\n            let ruleoutcome = $(select).val();\n            requests = Ajax.call([\n                {methodname: 'core_competency_set_course_competency_ruleoutcome',\n                  args: {coursecompetencyid: coursecompetencyid, ruleoutcome: ruleoutcome}},\n                {methodname: 'tool_lp_data_for_course_competencies_page',\n                  args: {courseid: $(select).closest('table').attr('data-courseid'), moduleid: 0}}\n            ]);\n            requests[1].then(function() {\n                $(select).addClass('displace-alert success');\n                setTimeout(\n                    function(){\n                        $(select).removeClass('displace-alert success');\n                    },\n                    1000\n                );\n            })\n            .then(pendingPromise.resolve);\n        },\n        /**\n         * Initially collapse all competency frameworks.\n         * @param {string} uniqid of template.\n         */\n        toggleInit: function(uniqid) {\n            let C = this;\n            if (C.debug) {\n                console.log(uniqid);\n            }\n            let table = $('#coursecompetenciesadd-' + uniqid);\n            table.find('tr[data-path=\"/0/\"]>td>a').each(function() {\n                C.toggleNode(this);\n            });\n            table.find('tr.used').each(function() {\n                C.toggleInitRecursive(this);\n            });\n        },\n        /**\n         * Toggle recursively nodes by their parents.\n         * @param {DOMElement} tr to start with.\n         */\n        toggleInitRecursive: function(tr) {\n            let C = this;\n            $(tr).removeClass('hidden');\n            $(tr).addClass('children-visible');\n            let childof = parseInt($(tr).attr('data-childof'));\n            if (childof > 0) {\n                let parent = $(tr).closest('table').find('tr[data-id=' + childof + ']');\n                if (parent.length > 0) {\n                    $('tr.childof-' + childof).removeClass('hidden');\n                    C.toggleInitRecursive(parent);\n                }\n            }\n        },\n        /**\n         * Recursively toggle nodes.\n         * @param {DOMElement} sender\n         */\n        toggleNode: function(sender) {\n            let tr = $(sender).closest('tr');\n            let id = tr.attr('data-id');\n            let childrenvisible = tr.hasClass('children-visible');\n\n            if (childrenvisible) {\n                // Make all children hidden.\n                $('tr.childof-' + id).each(\n                    function() {\n                        let subpath = $(this).attr('data-path');\n                        $('tr[data-path^=\"' + subpath + '\"]').addClass('hidden');\n                    }\n                );\n                $(tr).removeClass('children-visible');\n            } else {\n                // Make direct children visible.\n                $('tr.childof-' + id).removeClass('hidden');\n                $(tr).addClass('children-visible');\n            }\n        },\n    };\n});\n"],"names":["define","$","Ajax","Notification","ModalFactory","Pending","Str","debug","queue","queueActiveItem","competencyAddSingle","a","C","this","console","log","data","closest","attr","push","addClass","competencyQueue","competencyAddMultiple","tr","id","children","find","length","first","hasClass","shortname","html","get_strings","component","param","done","s","confirm","each","competencyRemoveSingle","fail","exception","confirmed","method","item","shift","call","methodname","args","result","removeClass","setTimeout","ex","modalDescription","description","create","title","body","modal","show","setRuleOutcomeOption","select","pendingPromise","requests","coursecompetencyid","ruleoutcome","val","courseid","moduleid","then","resolve","toggleInit","uniqid","table","toggleNode","toggleInitRecursive","childof","parseInt","parent","sender","subpath"],"mappings":"AAAAA,mCACI,CAAC,SAAU,YAAa,oBAAqB,qBAAsB,eAAe,aAClF,SAASC,EAAGC,KAAMC,aAAcC,aAAcC,QAASC,WAChD,CACHC,OAAO,EACPC,MAAO,GACPC,iBAAiB,EAKjBC,oBAAqB,SAASC,OACtBC,EAAIC,KACJD,EAAEL,OACFO,QAAQC,IAAI,aAAcJ,OAM1BK,KAAO,UAHIf,EAAEU,GAAGM,QAAQ,SAASC,KAAK,8BACjCjB,EAAEU,GAAGM,QAAQ,MAAMC,KAAK,YAGjCN,EAAEJ,MAAMW,KAAK,YAFA,gDAE+BH,QAAYf,EAAEU,GAAGM,QAAQ,QACrEhB,EAAEU,GAAGM,QAAQ,MAAMG,SAAS,iBAC5BR,EAAES,mBAONC,sBAAuB,SAASX,OACxBC,EAAIC,KAGJU,GAAKtB,EAAEU,GAAGM,QAAQ,MAClBO,GAAKD,GAAGL,KAAK,WACbO,SAAWF,GAAGN,QAAQ,SAASS,KAAK,cAAgBF,OACpDC,SAASE,OAAS,EAAG,IACjBf,EAAEL,OACFO,QAAQC,IAAI,WAAYU,UAEfA,SAASG,QAAQC,SAAS,QAOhC,KACCC,UAAY7B,EAAEU,GAAGM,QAAQ,MAAMS,KAAK,cAAcK,OACtDzB,IAAI0B,YAAY,CACR,KAAS,0BAA2BC,UAAW,kBAC/C,KAAS,6BAA8BA,UAAW,iBAAkBC,MAAO,WAAeJ,YAC1F,KAAS,OACT,KAAQ,QACTK,MAAK,SAASC,GACbjC,aAAakC,QACTD,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACpB,WACIX,SAASa,MAAK,WACNrC,EAAEY,MAAMgB,SAAS,SACjBjB,EAAE2B,uBAAuBtC,EAAEY,MAAMa,KAAK,kBAAkB,YAM9Ec,KAAKrC,aAAasC,gBAxBpBhB,SAASa,MAAK,WACLrC,EAAEY,MAAMgB,SAAS,SAClBjB,EAAEF,oBAAoBT,EAAEY,MAAMa,KAAK,oBAgCvDa,uBAAwB,SAAS5B,EAAG+B,eAC5B9B,EAAIC,aACiB,IAAd6B,UAA2B,KAC9BZ,UAAY7B,EAAEU,GAAGM,QAAQ,MAAMS,KAAK,cAAcK,OACtDzB,IAAI0B,YAAY,CACR,KAAS,0BAA2BC,UAAW,kBAC/C,KAAS,2BAA4BA,UAAW,iBAAkBC,MAAO,WAAeJ,YACxF,KAAS,OACT,KAAQ,QACTK,MAAK,SAASC,GACbjC,aAAakC,QACTD,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACpB,WACIxB,EAAE2B,uBAAuB5B,GAAG,SAI1C6B,KAAKrC,aAAasC,eACjB,CACC7B,EAAEL,OACFO,QAAQC,IAAI,gBAAiBJ,OAI7BgC,OAAS,gDACT3B,KAAO,UAHIf,EAAEU,GAAGM,QAAQ,SAASC,KAAK,8BACjCjB,EAAEU,GAAGM,QAAQ,MAAMC,KAAK,YAGjCN,EAAEJ,MAAMW,KAAK,YAAewB,YAAgB3B,QAAYf,EAAEU,GAAGM,QAAQ,QACrEhB,EAAEU,GAAGM,QAAQ,MAAMG,SAAS,iBAC5BR,EAAES,oBAMVA,gBAAiB,eACTT,EAAIC,QACJD,EAAEH,0BAGgB,GAAlBG,EAAEJ,MAAMmB,kBAGRiB,KAAOhC,EAAEJ,MAAMqC,QACfjC,EAAEL,OACFO,QAAQC,IAAI,aAAc6B,MAE9BhC,EAAEH,iBAAkB,EACpBP,KAAK4C,KAAK,CAAC,CACPC,WAAYH,KAAKG,WACjBC,KAAMJ,KAAKI,KACXb,KAAM,SAASc,QACXhD,EAAE2C,KAAKrB,IAAI2B,YAAY,iBACnBtC,EAAEL,OACFO,QAAQC,IAAI,cAAgB6B,KAAKG,WAAYE,QAE7CA,QACuB,4CAAnBL,KAAKG,WACL9C,EAAE2C,KAAKrB,IAAIH,SAAS,QAEpBnB,EAAE2C,KAAKrB,IAAI2B,YAAY,QAE3BjD,EAAE2C,KAAKrB,IAAIH,SAAS,0BACpB+B,YACI,WACIlD,EAAE2C,KAAKrB,IAAI2B,YAAY,4BACxB,MAGPjD,EAAE2C,KAAKrB,IAAIH,SAAS,yBAExBR,EAAEH,iBAAkB,EACpBG,EAAES,mBAENmB,KAAM,SAASY,IACXnD,EAAE2C,KAAKrB,IAAIH,SAAS,yBACpBR,EAAEH,iBAAkB,EACpBN,aAAasC,UAAUW,SAQnCC,iBAAkB,SAAS1C,OACnB2C,YAAcrD,EAAEU,GAAGe,KAAK,gBAAgBK,OACxCD,UAAY7B,EAAEU,GAAGe,KAAK,cAAcK,OACxC3B,aAAamD,OAAO,CAChBC,MAAO1B,UACP2B,KAAMH,cACPnB,MAAK,SAASuB,OACbA,MAAMC,WAOdC,qBAAsB,SAASC,YACvBC,eAAiB,IAAIzD,QACrB0D,SAAW,GAEXC,mBAAqB/D,EAAE4D,QAAQ5C,QAAQ,MAAMC,KAAK,WAClD+C,YAAchE,EAAE4D,QAAQK,MAC5BH,SAAW7D,KAAK4C,KAAK,CACjB,CAACC,WAAY,oDACXC,KAAM,CAACgB,mBAAoBA,mBAAoBC,YAAaA,cAC9D,CAAClB,WAAY,4CACXC,KAAM,CAACmB,SAAUlE,EAAE4D,QAAQ5C,QAAQ,SAASC,KAAK,iBAAkBkD,SAAU,MAEnFL,SAAS,GAAGM,MAAK,WACbpE,EAAE4D,QAAQzC,SAAS,0BACnB+B,YACI,WACIlD,EAAE4D,QAAQX,YAAY,4BAE1B,QAGPmB,KAAKP,eAAeQ,UAMzBC,WAAY,SAASC,YACb5D,EAAIC,KACJD,EAAEL,OACFO,QAAQC,IAAIyD,YAEZC,MAAQxE,EAAE,0BAA4BuE,QAC1CC,MAAM/C,KAAK,4BAA4BY,MAAK,WACxC1B,EAAE8D,WAAW7D,SAEjB4D,MAAM/C,KAAK,WAAWY,MAAK,WACvB1B,EAAE+D,oBAAoB9D,UAO9B8D,oBAAqB,SAASpD,QACtBX,EAAIC,KACRZ,EAAEsB,IAAI2B,YAAY,UAClBjD,EAAEsB,IAAIH,SAAS,wBACXwD,QAAUC,SAAS5E,EAAEsB,IAAIL,KAAK,oBAC9B0D,QAAU,EAAG,KACTE,OAAS7E,EAAEsB,IAAIN,QAAQ,SAASS,KAAK,cAAgBkD,QAAU,KAC/DE,OAAOnD,OAAS,IAChB1B,EAAE,cAAgB2E,SAAS1B,YAAY,UACvCtC,EAAE+D,oBAAoBG,WAQlCJ,WAAY,SAASK,YACbxD,GAAKtB,EAAE8E,QAAQ9D,QAAQ,MACvBO,GAAKD,GAAGL,KAAK,WACKK,GAAGM,SAAS,qBAI9B5B,EAAE,cAAgBuB,IAAIc,MAClB,eACQ0C,QAAU/E,EAAEY,MAAMK,KAAK,aAC3BjB,EAAE,kBAAoB+E,QAAU,MAAM5D,SAAS,aAGvDnB,EAAEsB,IAAI2B,YAAY,sBAGlBjD,EAAE,cAAgBuB,IAAI0B,YAAY,UAClCjD,EAAEsB,IAAIH,SAAS"}