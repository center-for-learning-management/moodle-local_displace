{"version":3,"file":"competency.min.js","sources":["../src/competency.js"],"sourcesContent":["import $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport * as Str from 'core/str';\nimport Config from 'core/config';\n\nconst debug = false;\nconst queue = [];\nlet queueActiveItem = false;\n\nconst courseid = Config.courseId > 1 ? Config.courseId : 0;\nconst useSessionCompetencies = !courseid;\nlet sessionCompetencies = [];\n\nconst sessionCompetenciesTmp = $(':input[name=\"session_competencies\"]').val();\nif (sessionCompetenciesTmp) {\n  sessionCompetencies = sessionCompetenciesTmp.split(',');\n}\n\n/**\n * Add a single competency to a course.\n * @param {HTMLElement} a sender of the event.\n */\nfunction competencyAddSingle(a) {\n  if (debug) {\n    console.log('Add single', a);\n  }\n\n  let id = $(a).closest('.competency-row').attr('data-id');\n\n  if (useSessionCompetencies) {\n    sessionCompetencies.push(id);\n    $(a).closest('.competency-row').addClass('used');\n    $(':input[name=\"session_competencies\"]').val(sessionCompetencies.join(','));\n    return;\n  }\n\n  let method = 'core_competency_add_competency_to_course';\n  let data = {'courseid': courseid, 'competencyid': id};\n  queue.push({'methodname': method, 'args': data, row: $(a).closest('.competency-row')});\n  $(a).closest('.competency-row').addClass('queue-pending');\n  competencyQueue();\n}\n\n/**\n * Add/Remove multiple competencies\n * to/from a course.\n * @param {HTMLElement} a sender of the event.\n */\nasync function competencyAddMultiple(a) {\n  // Get the first child to decide if we\n  // add or remove.\n  let row = $(a).closest('.competency-row');\n  let children = getChildren(row)\n    // nur sichtbare hinzuf체gen, weil aufgrund der suche ggf welche versteckt sind\n    .filter(function () {\n      return $(this).closest('.hidden').length === 0;\n    });\n\n  /**\n   * mark children as removed\n   */\n  function removeNow() {\n    children.filter('.used').each(function () {\n      competencyRemoveSingle($(this).find('.removesingle'), true);\n    });\n  }\n\n  if (children.length > 0) {\n    // falls einer noch nicht ausgew채hlt ist, alle ausw채hlen, sonst alle abw채hlen\n    var selectAll = children.filter(':not(.used)').length > 0;\n\n    toggleNode(row, true);\n\n    if (selectAll) {\n      children.not('.used').each(function () {\n        competencyAddSingle($(this).find('.addsingle'));\n      });\n    } else {\n      if (useSessionCompetencies) {\n        removeNow();\n      } else {\n        let shortname = $(a).closest('.competency-row').find('.shortname').html();\n        const s = await get_strings([\n          {'key': 'competency:remove:title', component: 'local_displace'},\n          {'key': 'competency:remove:multiple', component: 'local_displace', param: {shortname}},\n          {'key': 'yes'},\n          {'key': 'no'}\n        ]);\n\n        Notification.confirm(\n          s[0], s[1], s[2], s[3],\n          removeNow\n        );\n      }\n    }\n\n    if (useSessionCompetencies) {\n      $(':input[name=\"session_competencies\"]').val(sessionCompetencies.join(','));\n    }\n  }\n}\n\n/**\n * Remove a single competency from a course and hide it from the list.\n * @param {HTMLElement} el\n * @returns {Promise<void>}\n */\nexport async function competencyRemoveFromList(el) {\n  competencyRemoveSingle(el);\n}\n\n/**\n * Remove a single competency from a course.\n * @param {HTMLElement} el sender of the event.\n * @param {boolean} confirmed if the user confirmed the action.\n */\nexport async function competencyRemoveSingle(el, confirmed = false) {\n  if (useSessionCompetencies) {\n    let id = $(el).closest('.competency-row').attr('data-id');\n\n    sessionCompetencies = sessionCompetencies.filter((value) => value != id);\n    $(el).closest('.competency-row').removeClass('used');\n    $(':input[name=\"session_competencies\"]').val(sessionCompetencies.join(','));\n    return;\n  }\n\n  if (!confirmed) {\n    var shortname = $(el).closest('.competency-row').find('.shortname').html();\n    const s = await get_strings([\n      {'key': 'competency:remove:title', component: 'local_displace'},\n      {'key': 'competency:remove:single', component: 'local_displace', param: {shortname}},\n      {'key': 'yes'},\n      {'key': 'no'}\n    ]);\n\n    Notification.confirm(\n      s[0], s[1], s[2], s[3],\n      function () {\n        competencyRemoveSingle(el, true);\n      }\n    );\n  } else {\n    if (debug) {\n      console.log('Remove single', el);\n    }\n    let id = $(el).closest('.competency-row').attr('data-id');\n    let method = 'core_competency_remove_competency_from_course';\n    let data = {'courseid': courseid, 'competencyid': id};\n    queue.push({'methodname': method, 'args': data, row: $(el).closest('.competency-row')});\n    $(el).closest('.competency-row').addClass('queue-pending');\n    competencyQueue();\n  }\n}\n\n/**\n * Handles the next item in queue.\n */\nfunction competencyQueue() {\n  if (queueActiveItem) {\n    return;\n  }\n  if (queue.length == 0) {\n    return;\n  }\n  let item = queue.shift();\n  if (debug) {\n    console.log('Queue Item', item);\n  }\n  queueActiveItem = true;\n  Ajax.call([{\n    methodname: item.methodname,\n    args: item.args,\n    done: function (result) {\n      if (document.location.href.match(/coursecompetencies.php/)) {\n        // competencies list, remove the row\n        $(item.row).fadeOut(500, function () {\n          $(this).remove(); // Remove the <tr> from the DOM after fading out\n        });\n      } else {\n        $(item.row).removeClass('queue-pending');\n        if (debug) {\n          console.log('Results of ' + item.methodname, result);\n        }\n        if (result) {\n          if (item.methodname == 'core_competency_add_competency_to_course') {\n            $(item.row).addClass('used');\n          } else {\n            $(item.row).removeClass('used');\n          }\n          $(item.row).addClass('displace-alert success');\n          setTimeout(\n            function () {\n              $(item.row).removeClass('displace-alert success');\n            }, 1000\n          );\n        } else {\n          $(item.row).addClass('displace-alert danger');\n        }\n      }\n\n      queueActiveItem = false;\n      competencyQueue();\n    },\n    fail: function (ex) {\n      $(item.row).addClass('displace-alert danger');\n      queueActiveItem = false;\n      Notification.exception(ex);\n    }\n  }]);\n}\n\n/**\n * Sets the rule outcome option.\n * @param {HTMLElement} select\n */\nexport function setRuleOutcomeOption(select) {\n  let pendingPromise = new Pending();\n  let requests = [];\n\n  let coursecompetencyid = $(select).closest('.competency-row').attr('data-coursecompetencyid');\n  let ruleoutcome = $(select).val();\n  requests = Ajax.call([\n    {\n      methodname: 'core_competency_set_course_competency_ruleoutcome',\n      args: {coursecompetencyid: coursecompetencyid, ruleoutcome: ruleoutcome}\n    },\n    {\n      methodname: 'tool_lp_data_for_course_competencies_page',\n      args: {courseid: $(select).closest('table').attr('data-courseid'), moduleid: 0}\n    }\n  ]);\n  requests[1].then(function () {\n    $(select).addClass('displace-alert success');\n    setTimeout(\n      function () {\n        $(select).removeClass('displace-alert success');\n      },\n      1000\n    );\n  })\n    .then(pendingPromise.resolve);\n}\n\n/**\n * Get the currently visible framework\n * @returns {jQuery}\n */\nfunction getCurrentFramework() {\n  return $('#local_displace-framework-container > *:visible').first();\n}\n\n/**\n * get containers for all root nodes\n * @param {jQuery?} $container\n * @returns {*}\n */\nfunction getRootContainers($container) {\n  if (!$container) {\n    $container = getCurrentFramework();\n  }\n\n  return $container.find('.competency-root-container').children('.competency-container');\n}\n\n/**\n * get all children of a competency\n * @param {jQuery} row the competency row\n * @returns {jQuery}\n */\nfunction getChildren(row) {\n  return $(row).closest('.competency-container').children('.competency-children').children().children('.competency-row');\n}\n\n/**\n * Load the selected framework\n * @returns {Promise<void>}\n */\nasync function loadSelectedFramework() {\n  var $select = $('.coursecompetenciesadd select[name=\"frameworkid\"]');\n  var selectedText = $select.find(\"option:selected\").text();\n\n  const s = await get_strings([\n    {key: 'competency:loading_framework', component: 'local_displace', param: selectedText}\n  ]);\n\n  // hide all other frameworks\n  $('#local_displace-framework-container > *').hide();\n\n  var frameworkid = $select.val();\n  var $existingFramework = $('#local_displace-framework-container > [data-frameworkid=\"' + frameworkid + '\"]');\n\n  if ($existingFramework.length) {\n    $existingFramework.show();\n  } else {\n    // Loading info table\n    var $container = $('<div data-frameworkid=\"' + frameworkid + '\">' + s[0] + '</div>')\n      .appendTo('#local_displace-framework-container');\n\n    $.get(Config.wwwroot + '/local/displace/competency/coursecompetenciesadd.php?action=competency_selector_tree&courseid=' +\n      courseid + '&frameworkid=' + frameworkid).then(ret => {\n      $container.html('');\n      $container.append(ret);\n\n      sessionCompetencies.forEach((id) => {\n        $container.find('.competency-row[data-id=' + id + ']').addClass('used');\n      });\n\n      if (debug) {\n        console.log('root container', getRootContainers($container).length, getRootContainers($container));\n      }\n\n      openDefaultNodes();\n    });\n  }\n}\n\n/**\n * Get strings from the server.\n * @param {array} requests requested strings\n * @returns {Promise<*>}\n */\nasync function get_strings(requests) {\n  return Str.get_strings(requests).then(strings => {\n    var result = {};\n    requests.forEach((str, i) => {\n      result[i] = strings[i]; // backwards compatible\n      result[str.key] = strings[i];\n    });\n    return result;\n  });\n}\n\n/**\n * Escape HTML special characters.\n * @param {string} str\n * @returns {string}\n */\nfunction escapeHTML(str) {\n  return str\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\");\n}\n\n/**\n * Escape regular expression special characters.\n * @param {string} str\n * @returns {string}\n */\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\n/**\n * Update the search results.\n */\nfunction updateSearch() {\n  const $search = $('.local_displace.competency .simplesearchform :input[type=\"text\"]');\n  const searchText = $search.val().trim();\n\n  const $container = getCurrentFramework();\n\n  $('#local_displace-table-search-not-entries-found-message').addClass('hidden');\n  $('#local_displace-table-search-more-entries-found').addClass('hidden');\n\n  const $oldFoundRows = $container.find('.competency-row.is-found');\n  $oldFoundRows.removeClass('is-found');\n  $oldFoundRows.find('.shortname.highlighted').remove();\n\n  if (searchText.length == 0) {\n    // alle Elemente anzeigen\n    $container.find('.competency-container.hidden').removeClass('hidden');\n    // getRootContainers($container).removeClass('hidden');\n\n    if ($oldFoundRows.length) {\n      // leave tree as is\n    } else {\n      // last search was empty, so show default table\n\n      // first hide and close all\n      $container.find('.competency-row.open').removeClass('open');\n\n      openDefaultNodes();\n    }\n  } else {\n    // first hide and close all\n    $container.find('.competency-row.open').removeClass('open');\n    $container.find('.competency-container').addClass('hidden');\n\n    const searchParts = searchText.toLowerCase().split(/\\s+/);\n\n    // show found items\n    var $foundRows = $container.find('.shortname')\n      .filter((index, el) => {\n        var text = el.textContent.toLowerCase();\n        return searchParts.every(part => text.includes(part));\n      })\n      .closest('.competency-row');\n\n    const maxFound = 300;\n    const moreFound = $foundRows.length > maxFound;\n    $foundRows = $foundRows.slice(0, maxFound);\n\n    if ($foundRows.length) {\n      // mark them found\n      $foundRows.addClass('is-found');\n      // then open it and all parents\n      $foundRows.parents('.competency-container').children('.competency-row.has-children').addClass('open');\n      // show container and all parent containers\n      $foundRows.parents('.competency-container').removeClass('hidden');\n      // if a parent is found, show all children\n      $foundRows.closest('.competency-container').find('.competency-container.hidden').removeClass('hidden');\n\n      // highlight text inside the row\n      const escapedStr = searchParts.map(part => escapeRegExp(escapeHTML(part))).join('|');\n      const regexp = new RegExp(`(${escapedStr})`, 'gi');\n      $foundRows.find('.shortname').each(function (index, el) {\n        // replace each part with a <mark/> tag\n        $('<span class=\"shortname highlighted\">' + el.textContent.replace(regexp, '<mark>$1</mark>') + '</span>').insertBefore(el);\n      });\n\n      if (moreFound) {\n        $('#local_displace-table-search-more-entries-found').removeClass('hidden')\n          .find('.num').html(maxFound);\n      }\n    } else {\n      $('#local_displace-table-search-not-entries-found-message').removeClass('hidden');\n    }\n  }\n}\n\n/**\n * Initially collapse all competency frameworks.\n */\nexport function competenciesaddInit() {\n  if (debug) {\n    console.log('competenciesaddInit');\n  }\n\n  $('.coursecompetenciesadd select[name=\"frameworkid\"]').change(function () {\n    // clear old search\n    var $search = $('.local_displace.competency .simplesearchform :input[type=\"text\"]');\n    if ($search.val()) {\n      $search.val('').trigger('input');\n      updateSearch();\n    }\n\n    loadSelectedFramework();\n  });\n\n  $(function () {\n    // only load tree if container is visible\n    if ($('#local_displace-framework-container').is(':visible')) {\n      loadSelectedFramework();\n    }\n  });\n\n  $('#local_displace-framework-container')\n    .on('click', '.has-children .toggler', function (e) {\n      e.preventDefault();\n      toggleNode(this, null);\n    })\n    // handle other events\n    .on('click', '.addsingle', function (e) {\n      e.preventDefault();\n      competencyAddSingle(this);\n    })\n    .on('click', '.addmultiple', function (e) {\n      e.preventDefault();\n      competencyAddMultiple(this);\n    })\n    .on('click', '.removesingle', function (e) {\n      e.preventDefault();\n      competencyRemoveSingle(this);\n    });\n\n  $(document).on('click', '.local_displace.competency .simplesearchform .clear-button', function () {\n    $(this).closest('.clear-button-wrapper').find(':input[type=\"text\"]').val('').trigger('input').focus();\n    updateSearch();\n  });\n\n  $(document).on('click', '.local_displace.competency .simplesearchform button', function () {\n    updateSearch();\n  });\n\n  $(document).on('keypress', ':input[name=\"competency-search\"]', function (e) {\n    if (e.which === 13) {  // 13 is the Enter key code\n      // Action to perform when Enter is pressed\n      e.preventDefault();\n      updateSearch();\n    }\n  });\n\n  $(document).on('input', ':input[name=\"competency-search\"]', function () {\n    const searchText = this.value.trim();\n    $(this).closest('.clear-button-wrapper').find('.clear-button').toggle(searchText.length > 0);\n  });\n}\n\n/**\n * Open all used competencies or at least first level\n */\nfunction openDefaultNodes() {\n  const $container = getCurrentFramework();\n\n  // open used competencies\n  $container.find('.competency-row.used').parents('.competency-container').children('.competency-row.has-children')\n    .addClass('open');\n\n  if (!document.location.href.match(/package_edit.php/) && $container.find('.open').length == 0) {\n    // erste ebene 철ffnen, aber nicht auf der package_edit.php, weil sonst wird die Liste zu lange\n    // und auch nicht, wenn schon Elemente ausgew채hlt sind\n    getRootContainers($container).each(function () {\n      toggleNode(this, true);\n    });\n  }\n}\n\n/**\n * Recursively toggle nodes.\n * @param {HTMLElement} el the node to toggle\n * @param {boolean} open\n */\nfunction toggleNode(el, open = undefined) {\n  var $el = $(el);\n  if ($el.is('.competency-container')) {\n    $el = $el.children('.competency-row');\n  } else {\n    $el = $el.closest('.competency-row');\n  }\n  $el.toggleClass('open', open);\n}\n"],"names":["change","$search","val","trigger","updateSearch","loadSelectedFramework","is","on","e","preventDefault","toggleNode","this","competencyAddSingle","a","row","closest","children","getChildren","filter","length","removeNow","each","competencyRemoveSingle","find","selectAll","not","useSessionCompetencies","shortname","html","s","get_strings","component","param","confirm","sessionCompetencies","join","competencyAddMultiple","document","focus","which","searchText","value","trim","toggle","el","select","pendingPromise","Pending","requests","coursecompetencyid","attr","ruleoutcome","Ajax","call","methodname","args","courseid","moduleid","then","addClass","setTimeout","removeClass","resolve","queue","queueActiveItem","Config","courseId","sessionCompetenciesTmp","id","push","data","competencyQueue","confirmed","method","item","shift","done","result","location","href","match","fadeOut","remove","fail","ex","exception","getCurrentFramework","first","getRootContainers","$container","$select","selectedText","text","key","hide","frameworkid","$existingFramework","show","appendTo","get","wwwroot","ret","append","forEach","openDefaultNodes","Str","strings","str","i","$oldFoundRows","searchParts","toLowerCase","split","$foundRows","index","textContent","every","part","includes","maxFound","moreFound","slice","parents","escapedStr","map","replace","escapeRegExp","regexp","RegExp","insertBefore","open","undefined","$el","toggleClass"],"mappings":"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"}