{"version":3,"file":"competency.min.js","sources":["../src/competency.js"],"sourcesContent":["/* eslint-disable */\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport * as Str from 'core/str';\nimport Config from 'core/config';\n\nvar debug = true;\nvar queue = [];\nvar queueActiveItem = false;\n\nconst courseid = Config.courseId > 1 ? Config.courseId : 0;\nconst useSessionCompetencies = !courseid;\nlet sessionCompetencies = [];\n\nconst sessionCompetenciesTmp = $(':input[name=\"session_competencies\"]').val();\nif (sessionCompetenciesTmp) {\n  sessionCompetencies = sessionCompetenciesTmp.split(',');\n}\n\n/**\n * Add a single competency to a course.\n * @param {DOMElement} a sender of the event.\n */\nfunction competencyAddSingle(a) {\n  if (debug) {\n    console.log('Add single', a);\n  }\n\n  let id = $(a).closest('.competency-row').attr('data-id');\n\n  if (useSessionCompetencies) {\n    sessionCompetencies.push(id);\n    $(a).closest('.competency-row').addClass('used');\n    $(':input[name=\"session_competencies\"]').val(sessionCompetencies.join(','));\n    return;\n  }\n\n  let method = 'core_competency_add_competency_to_course';\n  let data = {'courseid': courseid, 'competencyid': id};\n  queue.push({'methodname': method, 'args': data, tr: $(a).closest('.competency-row')});\n  $(a).closest('.competency-row').addClass('queue-pending');\n  competencyQueue();\n};\n\n/**\n * Add/Remove multiple competencies\n * to/from a course.\n * @param {DOMElement} a sender of the event.\n */\nasync function competencyAddMultiple(a) {\n  // Get the first child to decide if we\n  // add or remove.\n  let tr = $(a).closest('.competency-row');\n  let children = getChildren(tr);\n\n  if (children.length > 0) {\n    // falls einer noch nicht ausgewählt ist, alle auswählen, sonst alle abwählen\n    var selectAll = children.filter(':not(.used)').length > 0;\n\n    toggleNode(tr, true, true);\n\n    if (selectAll) {\n      children.not('.used').each(function () {\n        competencyAddSingle($(this).find('.addsingle'));\n      });\n    } else {\n      function removeNow() {\n        children.filter('.used').each(function () {\n          competencyRemoveSingle($(this).find('.removesingle'), true);\n        });\n      }\n\n      if (useSessionCompetencies) {\n        removeNow();\n      } else {\n        let shortname = $(a).closest('.competency-row').find('.shortname').html();\n        const s = await get_strings([\n          {'key': 'competency:remove:title', component: 'local_displace'},\n          {'key': 'competency:remove:multiple', component: 'local_displace', param: {'shortname': shortname}},\n          {'key': 'yes'},\n          {'key': 'no'}\n        ]);\n\n        Notification.confirm(\n          s[0], s[1], s[2], s[3],\n          removeNow\n        );\n      }\n    }\n\n    if (useSessionCompetencies) {\n      $(':input[name=\"session_competencies\"]').val(sessionCompetencies.join(','));\n    }\n  }\n}\n\n/**\n * Remove a single competency from a course.\n * @param {DOMElement} a sender of the event.\n * @param {boolean} confirmed if the user confirmed the action.\n */\nasync function competencyRemoveSingle(a, confirmed) {\n  if (useSessionCompetencies) {\n    let id = $(a).closest('.competency-row').attr('data-id');\n\n    sessionCompetencies = sessionCompetencies.filter((value) => value != id);\n    $(a).closest('.competency-row').removeClass('used');\n    $(':input[name=\"session_competencies\"]').val(sessionCompetencies.join(','));\n    return;\n  }\n\n  if (typeof confirmed === 'undefined') {\n    var shortname = $(a).closest('.competency-row').find('.shortname').html();\n    const s = await get_strings([\n      {'key': 'competency:remove:title', component: 'local_displace'},\n      {'key': 'competency:remove:single', component: 'local_displace', param: {'shortname': shortname}},\n      {'key': 'yes'},\n      {'key': 'no'}\n    ]);\n\n    Notification.confirm(\n      s[0], s[1], s[2], s[3],\n      function () {\n        competencyRemoveSingle(a, true);\n      }\n    );\n  } else {\n    if (debug) {\n      console.log('Remove single', a);\n    }\n    let id = $(a).closest('.competency-row').attr('data-id');\n    let method = 'core_competency_remove_competency_from_course';\n    let data = {'courseid': courseid, 'competencyid': id};\n    queue.push({'methodname': method, 'args': data, tr: $(a).closest('.competency-row')});\n    $(a).closest('.competency-row').addClass('queue-pending');\n    competencyQueue();\n  }\n}\n\n/**\n * Handles the next item in queue.\n */\nfunction competencyQueue() {\n  if (queueActiveItem) {\n    return;\n  }\n  if (queue.length == 0) {\n    return;\n  }\n  let item = queue.shift();\n  if (debug) {\n    console.log('Queue Item', item);\n  }\n  queueActiveItem = true;\n  Ajax.call([{\n    methodname: item.methodname,\n    args: item.args,\n    done: function (result) {\n      $(item.tr).removeClass('queue-pending');\n      if (debug) {\n        console.log('Results of ' + item.methodname, result);\n      }\n      if (result) {\n        if (item.methodname == 'core_competency_add_competency_to_course') {\n          $(item.tr).addClass('used');\n        } else {\n          $(item.tr).removeClass('used');\n        }\n        $(item.tr).addClass('displace-alert success');\n        setTimeout(\n          function () {\n            $(item.tr).removeClass('displace-alert success');\n          }, 1000\n        );\n      } else {\n        $(item.tr).addClass('displace-alert danger');\n      }\n      queueActiveItem = false;\n      competencyQueue();\n    },\n    fail: function (ex) {\n      $(item.tr).addClass('displace-alert danger');\n      queueActiveItem = false;\n      Notification.exception(ex);\n    }\n  }]);\n}\n\n/**\n * Sets the rule outcome option.\n * @param {DOMElement} select\n */\nexport function setRuleOutcomeOption(select) {\n  let pendingPromise = new Pending();\n  let requests = [];\n\n  let coursecompetencyid = $(select).closest('.competency-row').attr('data-id');\n  let ruleoutcome = $(select).val();\n  requests = Ajax.call([\n    {\n      methodname: 'core_competency_set_course_competency_ruleoutcome',\n      args: {coursecompetencyid: coursecompetencyid, ruleoutcome: ruleoutcome}\n    },\n    {\n      methodname: 'tool_lp_data_for_course_competencies_page',\n      args: {courseid: $(select).closest('table').attr('data-courseid'), moduleid: 0}\n    }\n  ]);\n  requests[1].then(function () {\n    $(select).addClass('displace-alert success');\n    setTimeout(\n      function () {\n        $(select).removeClass('displace-alert success');\n      },\n      1000\n    );\n  })\n    .then(pendingPromise.resolve);\n}\n\nfunction getCurrentFramework() {\n  return $('#local_displace-framework-container > *:visible').first();\n}\n\nasync function loadSelectedFramework() {\n  var $select = $('.coursecompetenciesadd select[name=\"frameworkid\"]');\n  var selectedText = $select.find(\"option:selected\").text();\n\n  const s = await get_strings([\n    {key: 'competency:loading_framework', component: 'local_displace', param: selectedText}\n  ]);\n\n  // hide all other frameworks\n  $('#local_displace-framework-container > *').hide();\n\n  var frameworkid = $select.val();\n  var $existingFramework = $('#local_displace-framework-container > [data-frameworkid=\"' + frameworkid + '\"]');\n\n  if ($existingFramework.length) {\n    $existingFramework.show();\n  } else {\n    // Loading info table\n    var $container = $('<div data-frameworkid=\"' + frameworkid + '\">' + s[0] + '</div>').appendTo('#local_displace-framework-container');\n\n    $.get(Config.wwwroot + '/local/displace/competency/coursecompetenciesadd.php?action=competency_selector_tree&courseid=' + courseid + '&frameworkid=' + frameworkid).then(ret => {\n      console.log('show with timeout');\n      $container.html('');\n      $container.append(ret);\n\n      setTimeout(() => initContainer($container), 200);\n    });\n  }\n  // document.location.href = document.location.href.replace(/\\?.*/, '') + '?courseid=' + Config.courseId + '&frameworkid=' + this.value;\n}\n\nasync function get_strings(requests) {\n  return Str.get_strings(requests).then(strings => {\n    var result = {};\n    requests.forEach((str, i) => {\n      result[i] = strings[i]; // backwards compatible\n      result[str.key] = strings[i];\n    });\n    return result;\n  });\n}\n\n/**\n * Initially collapse all competency frameworks.\n * @param {string} uniqid of template.\n */\nexport function competenciesaddInit() {\n  if (debug) {\n    console.log('competenciesaddInit');\n  }\n\n  $('.coursecompetenciesadd select[name=\"frameworkid\"]').change(loadSelectedFramework)\n\n  $(function () {\n    // only load tree if container is visible\n    if ($('#local_displace-framework-container').is(':visible')) {\n      loadSelectedFramework();\n    }\n  });\n\n  $('#local_displace-framework-container')\n    .on('click', '.has-children .toggler', function (e) {\n      e.preventDefault();\n      toggleNode(this, null, true);\n    })\n    // handle other events\n    .on('click', '.addsingle', function (e) {\n      e.preventDefault();\n      competencyAddSingle(this);\n    })\n    .on('click', '.addmultiple', function (e) {\n      e.preventDefault();\n      competencyAddMultiple(this);\n    })\n    .on('click', '.removesingle', function (e) {\n      e.preventDefault();\n      competencyRemoveSingle(this);\n    });\n\n  $(document).on('input', ':input[name=\"competency-search\"]', function () {\n    const searchText = this.value.trim();\n\n    var $container = getCurrentFramework();\n\n    $('#local_displace-table-search-not-entries-found-message').addClass('hidden');\n\n    $container.find('.competency-row').removeClass('is-found')\n\n    if (searchText.length <= 2) {\n      $container.find('.competency-root-container').children('.competency-container').removeClass('hidden');\n      if ($container.find('.competency-row.is-found').length) {\n        $container.find('.is-found')\n          .removeClass('is-found');\n      } else {\n        // last search was empty, so show default table\n\n        // first hide and close all\n        $container.find('.competency-row.open').removeClass('open');\n        // show first level\n        $container.find('.competency-root-container').children()\n          .each(function () {\n            toggleNode(this, true);\n          });\n      }\n    } else {\n      // first hide and close all\n      $container.find('.competency-row.open').removeClass('open');\n\n      $container.find('.competency-root-container').children('.competency-container').addClass('hidden');\n\n      // show found items\n      var $foundRows = $container.find('.shortname')\n        .filter((index, el) => el.textContent.toLowerCase().includes(searchText.toLowerCase()))\n        .closest('.competency-row')\n        .addClass('is-found');\n\n      if ($foundRows.length) {\n        // then open it and all parents\n        $foundRows.parents('.competency-container').children('.competency-row.has-children').addClass('open');\n        $container.find('.competency-container.hidden').has('> .competency-row.open').removeClass('hidden');\n        $foundRows.filter('.has-children').addClass('open');\n      } else {\n        $('#local_displace-table-search-not-entries-found-message').removeClass('hidden');\n      }\n    }\n  });\n}\n\n// function getParentPath(path) {\n//   if (path) {\n//     return path.replace(/\\/[0-9]+$/, '');\n//   }\n// }\n\nfunction initContainer($container) {\n  if (sessionCompetencies.length) {\n    sessionCompetencies.forEach((id) => {\n      $container.find('.competency-row[data-id=' + id + ']').addClass('used');\n    });\n  }\n\n  // open first level\n  $container.find('.competency-root-container').children()\n    .each(function () {\n      toggleNode(this, true);\n    });\n\n  // open used competencies\n  $container.find('.competency-row.used').parents('.competency-container').children('.competency-row.has-children').addClass('open');\n}\n\nfunction getChildren(tr) {\n  return $(tr).closest('.competency-container').children('.competency-children').children().children('.competency-row');\n}\n\n/**\n * Recursively toggle nodes.\n * @param {DOMElement} sender\n */\nfunction toggleNode(sender, open = undefined, animate = false) {\n  var $sender = $(sender);\n  if ($sender.is('.competency-container')) {\n    $sender = $sender.children('.competency-row');\n  } else {\n    $sender = $sender.closest('.competency-row');\n  }\n  $sender.toggleClass('open', open);\n  return;\n\n  let $tr = $(sender).closest('.competency-row');\n  let $table = $tr.closest('table');\n\n  if (open === null || open === undefined) {\n    open = !$tr.hasClass('children-visible');\n  }\n  let close = !open;\n\n  // do open/close only if it isn't already opened/closed\n  close = close && $tr.hasClass('children-visible');\n  open = open && !$tr.hasClass('children-visible');\n\n  if (close) {\n    $tr\n      .removeClass('children-visible')\n      .find('.fa-folder').removeClass('fa-folder-open');\n\n    // Make all children hidden.\n    var $children = $table.find('tr[data-fullpath^=\"' + $tr.attr('data-fullpath') + '/\"]').not('.hidden');\n    if (!animate) {\n      $children.addClass('hidden');\n    } else {\n      var $wrapper = $children.find('.sliding-wrapper')\n      const height = $wrapper.outerHeight(); // Get current height\n      $wrapper.css('max-height', height); // Set height for transition\n      setTimeout(() => {\n        $wrapper.css('max-height', 0); // Animate to height 0\n        setTimeout(() => {\n          $children.addClass('hidden');\n          $wrapper.css('max-height', '');\n        }, 500); // Remove element from layout\n      }, 10); // Timeout for\n    }\n  }\n\n  if (open) {\n    $tr\n      .addClass('children-visible')\n      .find('.fa-folder').addClass('fa-folder-open');\n\n    // Make direct children visible and children of the children if they are open too.\n    var $children = getChildren($tr);\n    var $all = getChildren($tr);\n\n    do {\n      $children = $children.filter('.children-visible');\n\n      // get all subchildren in an array\n      $children = $children.map(function () {\n        return $children = getChildren(this).toArray()\n      });\n\n      $all = $all.add($children);\n    } while ($children.length > 0)\n\n    $children = $all;\n\n    if (!animate) {\n      $children.removeClass('hidden');\n    } else {\n      var $wrapper = $children.find('.sliding-wrapper')\n      $children.removeClass('hidden');\n      const height = 100; // Get current height\n      // const height = $wrapper.outerHeight(); // Get current height\n      $wrapper.css('max-height', 10); // Set height for transition\n      setTimeout(() => {\n        $wrapper.css('max-height', height);\n        setTimeout(() => {\n          $wrapper.css('max-height', '');\n        }, 500); // Remove element from layout\n      }, 10); // Timeout for\n    }\n  }\n}\n"],"names":["console","log","change","loadSelectedFramework","is","on","e","preventDefault","toggleNode","this","competencyAddSingle","a","tr","closest","children","getChildren","length","selectAll","filter","not","each","find","removeNow","competencyRemoveSingle","useSessionCompetencies","shortname","html","s","get_strings","component","param","confirm","val","sessionCompetencies","join","competencyAddMultiple","document","searchText","value","trim","$container","first","addClass","removeClass","$foundRows","index","el","textContent","toLowerCase","includes","parents","has","select","pendingPromise","Pending","requests","coursecompetencyid","attr","ruleoutcome","Ajax","call","methodname","args","courseid","moduleid","then","setTimeout","resolve","queue","queueActiveItem","Config","courseId","sessionCompetenciesTmp","id","push","data","competencyQueue","confirmed","method","item","shift","done","result","fail","ex","exception","$select","selectedText","text","key","hide","frameworkid","$existingFramework","show","appendTo","get","wwwroot","ret","append","forEach","initContainer","Str","strings","str","i","sender","open","undefined","$sender","toggleClass","split"],"mappings":"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"}